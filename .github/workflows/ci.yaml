name: C++ CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  format-check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install Clang-Format
        run: sudo apt-get install -y clang-format
      - name: Run Clang-Format
        run: |
          find src/ include/ -regex '.*\.\(cpp\|hpp\|h\|cc\|cxx\)' -exec clang-format -style=file -i {} \+
          git diff --exit-code

  cppcheck-analysis:
    runs-on: ubuntu-latest
    needs: format-check
    steps:
      - uses: actions/checkout@v3
      - name: Install cppcheck
        run: sudo apt-get install -y cppcheck
      - name: Run cppcheck
        run: cppcheck --enable=all -Iinclude --output-file=cppcheck_report.txt src/ include/
      - name: Upload cppcheck report
        uses: actions/upload-artifact@v3
        with:
          name: cppcheck-report
          path: cppcheck_report.txt

  static-analysis:
    runs-on: ubuntu-latest
    needs: format-check
    steps:
      - uses: actions/checkout@v3
      - name: Install dependencies for Clang-Tidy
        run: sudo apt-get install -y clang-tidy bear
      - name: Generate Compilation Database with Bear
        run: bear -- make
      - name: Run Clang-Tidy
        run: |
          find src/ include/ -regex '.*\.\(cpp\|hpp\|h\|cc\|cxx\)' -exec clang-tidy {} \+

  build:
    runs-on: ubuntu-latest
    needs: [cppcheck-analysis, static-analysis]
    steps:
      - uses: actions/checkout@v3
      - name: Install build essentials
        run: sudo apt-get install -y build-essential
      - name: Build with Make
        run: make all

  test:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v3
      - name: Run tests
        run: make run-test

      - name: Upload test results
        uses: actions/upload-artifact@v3
        with:
          name: test-results
          path: test_results.xml
